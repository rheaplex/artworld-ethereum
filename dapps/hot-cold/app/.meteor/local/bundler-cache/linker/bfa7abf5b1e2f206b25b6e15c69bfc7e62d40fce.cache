[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar _ = Package.underscore._;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar Template;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/templating/templating.js                                                                            //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n                                                                                                                // 1\n// Packages and apps add templates on to this object.                                                           // 2\n                                                                                                                // 3\n/**                                                                                                             // 4\n * @summary The class for defining templates                                                                    // 5\n * @class                                                                                                       // 6\n * @instanceName Template.myTemplate                                                                            // 7\n */                                                                                                             // 8\nTemplate = Blaze.Template;                                                                                      // 9\n                                                                                                                // 10\nvar RESERVED_TEMPLATE_NAMES = \"__proto__ name\".split(\" \");                                                      // 11\n                                                                                                                // 12\n// Check for duplicate template names and illegal names that won't work.                                        // 13\nTemplate.__checkName = function (name) {                                                                        // 14\n  // Some names can't be used for Templates. These include:                                                     // 15\n  //  - Properties Blaze sets on the Template object.                                                           // 16\n  //  - Properties that some browsers don't let the code to set.                                                // 17\n  //    These are specified in RESERVED_TEMPLATE_NAMES.                                                         // 18\n  if (name in Template || _.contains(RESERVED_TEMPLATE_NAMES, name)) {                                          // 19\n    if ((Template[name] instanceof Template) && name !== \"body\")                                                // 20\n      throw new Error(\"There are multiple templates named '\" + name + \"'. Each template needs a unique name.\");\n    throw new Error(\"This template name is reserved: \" + name);                                                 // 22\n  }                                                                                                             // 23\n};                                                                                                              // 24\n                                                                                                                // 25\n// XXX COMPAT WITH 0.8.3                                                                                        // 26\nTemplate.__define__ = function (name, renderFunc) {                                                             // 27\n  Template.__checkName(name);                                                                                   // 28\n  Template[name] = new Template(\"Template.\" + name, renderFunc);                                                // 29\n  // Exempt packages built pre-0.9.0 from warnings about using old                                              // 30\n  // helper syntax, because we can.  It's not very useful to get a                                              // 31\n  // warning about someone else's code (like a package on Atmosphere),                                          // 32\n  // and this should at least put a bit of a dent in number of warnings                                         // 33\n  // that come from packages that haven't been updated lately.                                                  // 34\n  Template[name]._NOWARN_OLDSTYLE_HELPERS = true;                                                               // 35\n};                                                                                                              // 36\n                                                                                                                // 37\n// Define a template `Template.body` that renders its                                                           // 38\n// `contentRenderFuncs`.  `<body>` tags (of which there may be                                                  // 39\n// multiple) will have their contents added to it.                                                              // 40\n                                                                                                                // 41\n/**                                                                                                             // 42\n * @summary The [template object](#templates_api) representing your `<body>`                                    // 43\n * tag.                                                                                                         // 44\n * @locus Client                                                                                                // 45\n */                                                                                                             // 46\nTemplate.body = new Template('body', function () {                                                              // 47\n  var view = this;                                                                                              // 48\n  return _.map(Template.body.contentRenderFuncs, function (func) {                                              // 49\n    return func.apply(view);                                                                                    // 50\n  });                                                                                                           // 51\n});                                                                                                             // 52\nTemplate.body.contentRenderFuncs = []; // array of Blaze.Views                                                  // 53\nTemplate.body.view = null;                                                                                      // 54\n                                                                                                                // 55\nTemplate.body.addContent = function (renderFunc) {                                                              // 56\n  Template.body.contentRenderFuncs.push(renderFunc);                                                            // 57\n};                                                                                                              // 58\n                                                                                                                // 59\n// This function does not use `this` and so it may be called                                                    // 60\n// as `Meteor.startup(Template.body.renderIntoDocument)`.                                                       // 61\nTemplate.body.renderToDocument = function () {                                                                  // 62\n  // Only do it once.                                                                                           // 63\n  if (Template.body.view)                                                                                       // 64\n    return;                                                                                                     // 65\n                                                                                                                // 66\n  var view = Blaze.render(Template.body, document.body);                                                        // 67\n  Template.body.view = view;                                                                                    // 68\n};                                                                                                              // 69\n                                                                                                                // 70\n// XXX COMPAT WITH 0.9.0                                                                                        // 71\nUI.body = Template.body;                                                                                        // 72\n                                                                                                                // 73\n// XXX COMPAT WITH 0.9.0                                                                                        // 74\n// (<body> tags in packages built with 0.9.0)                                                                   // 75\nTemplate.__body__ = Template.body;                                                                              // 76\nTemplate.__body__.__contentParts = Template.body.contentViews;                                                  // 77\nTemplate.__body__.__instantiate = Template.body.renderToDocument;                                               // 78\n                                                                                                                // 79\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/templating/template.dynamic.js                                                                      //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n                                                                                                                // 1\nTemplate.__checkName(\"__dynamic\");                                                                              // 2\nTemplate[\"__dynamic\"] = new Template(\"Template.__dynamic\", (function() {                                        // 3\n  var view = this;                                                                                              // 4\n  return [ Blaze.View(\"lookup:checkContext\", function() {                                                       // 5\n    return Spacebars.mustache(view.lookup(\"checkContext\"));                                                     // 6\n  }), \"\\n  \", Blaze.If(function() {                                                                             // 7\n    return Spacebars.call(view.lookup(\"dataContextPresent\"));                                                   // 8\n  }, function() {                                                                                               // 9\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"__dynamicWithDataContext\"), function() {          // 10\n      return Blaze._InOuterTemplateScope(view, function() {                                                     // 11\n        return Spacebars.include(function() {                                                                   // 12\n          return Spacebars.call(view.templateContentBlock);                                                     // 13\n        });                                                                                                     // 14\n      });                                                                                                       // 15\n    }), \"\\n  \" ];                                                                                               // 16\n  }, function() {                                                                                               // 17\n    return [ \"\\n    \\n    \", Blaze._TemplateWith(function() {                                                   // 18\n      return {                                                                                                  // 19\n        template: Spacebars.call(view.lookup(\"template\")),                                                      // 20\n        data: Spacebars.call(view.lookup(\"..\"))                                                                 // 21\n      };                                                                                                        // 22\n    }, function() {                                                                                             // 23\n      return Spacebars.include(view.lookupTemplate(\"__dynamicWithDataContext\"), function() {                    // 24\n        return Blaze._InOuterTemplateScope(view, function() {                                                   // 25\n          return Spacebars.include(function() {                                                                 // 26\n            return Spacebars.call(view.templateContentBlock);                                                   // 27\n          });                                                                                                   // 28\n        });                                                                                                     // 29\n      });                                                                                                       // 30\n    }), \"\\n  \" ];                                                                                               // 31\n  }) ];                                                                                                         // 32\n}));                                                                                                            // 33\n                                                                                                                // 34\nTemplate.__checkName(\"__dynamicWithDataContext\");                                                               // 35\nTemplate[\"__dynamicWithDataContext\"] = new Template(\"Template.__dynamicWithDataContext\", (function() {          // 36\n  var view = this;                                                                                              // 37\n  return Spacebars.With(function() {                                                                            // 38\n    return Spacebars.dataMustache(view.lookup(\"chooseTemplate\"), view.lookup(\"template\"));                      // 39\n  }, function() {                                                                                               // 40\n    return [ \"\\n    \\n    \", Blaze._TemplateWith(function() {                                                   // 41\n      return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"data\"));                                          // 42\n    }, function() {                                                                                             // 43\n      return Spacebars.include(view.lookupTemplate(\"..\"), function() {                                          // 44\n        return Blaze._InOuterTemplateScope(view, function() {                                                   // 45\n          return Spacebars.include(function() {                                                                 // 46\n            return Spacebars.call(view.templateContentBlock);                                                   // 47\n          });                                                                                                   // 48\n        });                                                                                                     // 49\n      });                                                                                                       // 50\n    }), \"\\n  \" ];                                                                                               // 51\n  });                                                                                                           // 52\n}));                                                                                                            // 53\n                                                                                                                // 54\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/templating/dynamic.js                                                                               //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar Template = Blaze.Template;                                                                                  // 1\n                                                                                                                // 2\n/**                                                                                                             // 3\n * @isTemplate true                                                                                             // 4\n * @memberOf Template                                                                                           // 5\n * @function dynamic                                                                                            // 6\n * @summary Choose a template to include dynamically, by name.                                                  // 7\n * @locus Templates                                                                                             // 8\n * @param {String} template The name of the template to include.                                                // 9\n * @param {Object} [data] Optional. The data context in which to include the                                    // 10\n * template.                                                                                                    // 11\n */                                                                                                             // 12\n                                                                                                                // 13\nTemplate.__dynamicWithDataContext.helpers({                                                                     // 14\n  chooseTemplate: function (name) {                                                                             // 15\n    return Blaze._getTemplate(name, function () {                                                               // 16\n      return Template.instance();                                                                               // 17\n    });                                                                                                         // 18\n  }                                                                                                             // 19\n});                                                                                                             // 20\n                                                                                                                // 21\nTemplate.__dynamic.helpers({                                                                                    // 22\n  dataContextPresent: function () {                                                                             // 23\n    return _.has(this, \"data\");                                                                                 // 24\n  },                                                                                                            // 25\n  checkContext: function () {                                                                                   // 26\n    if (! _.has(this, \"template\")) {                                                                            // 27\n      throw new Error(\"Must specify name in the 'template' argument \" +                                         // 28\n                      \"to {{> Template.dynamic}}.\");                                                            // 29\n    }                                                                                                           // 30\n                                                                                                                // 31\n    _.each(this, function (v, k) {                                                                              // 32\n      if (k !== \"template\" && k !== \"data\") {                                                                   // 33\n        throw new Error(\"Invalid argument to {{> Template.dynamic}}: \" +                                        // 34\n                        k);                                                                                     // 35\n      }                                                                                                         // 36\n    });                                                                                                         // 37\n  }                                                                                                             // 38\n});                                                                                                             // 39\n                                                                                                                // 40\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage.templating = {\n  Template: Template\n};\n\n})();\n","servePath":"/packages/templating.js","sourceMap":{"version":3,"sources":["/packages/templating/templating.js","/packages/templating/template.dynamic.js","/packages/templating/dynamic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qH;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qH;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qH","file":"/packages/templating.js","sourcesContent":["\n// Packages and apps add templates on to this object.\n\n/**\n * @summary The class for defining templates\n * @class\n * @instanceName Template.myTemplate\n */\nTemplate = Blaze.Template;\n\nvar RESERVED_TEMPLATE_NAMES = \"__proto__ name\".split(\" \");\n\n// Check for duplicate template names and illegal names that won't work.\nTemplate.__checkName = function (name) {\n  // Some names can't be used for Templates. These include:\n  //  - Properties Blaze sets on the Template object.\n  //  - Properties that some browsers don't let the code to set.\n  //    These are specified in RESERVED_TEMPLATE_NAMES.\n  if (name in Template || _.contains(RESERVED_TEMPLATE_NAMES, name)) {\n    if ((Template[name] instanceof Template) && name !== \"body\")\n      throw new Error(\"There are multiple templates named '\" + name + \"'. Each template needs a unique name.\");\n    throw new Error(\"This template name is reserved: \" + name);\n  }\n};\n\n// XXX COMPAT WITH 0.8.3\nTemplate.__define__ = function (name, renderFunc) {\n  Template.__checkName(name);\n  Template[name] = new Template(\"Template.\" + name, renderFunc);\n  // Exempt packages built pre-0.9.0 from warnings about using old\n  // helper syntax, because we can.  It's not very useful to get a\n  // warning about someone else's code (like a package on Atmosphere),\n  // and this should at least put a bit of a dent in number of warnings\n  // that come from packages that haven't been updated lately.\n  Template[name]._NOWARN_OLDSTYLE_HELPERS = true;\n};\n\n// Define a template `Template.body` that renders its\n// `contentRenderFuncs`.  `<body>` tags (of which there may be\n// multiple) will have their contents added to it.\n\n/**\n * @summary The [template object](#templates_api) representing your `<body>`\n * tag.\n * @locus Client\n */\nTemplate.body = new Template('body', function () {\n  var view = this;\n  return _.map(Template.body.contentRenderFuncs, function (func) {\n    return func.apply(view);\n  });\n});\nTemplate.body.contentRenderFuncs = []; // array of Blaze.Views\nTemplate.body.view = null;\n\nTemplate.body.addContent = function (renderFunc) {\n  Template.body.contentRenderFuncs.push(renderFunc);\n};\n\n// This function does not use `this` and so it may be called\n// as `Meteor.startup(Template.body.renderIntoDocument)`.\nTemplate.body.renderToDocument = function () {\n  // Only do it once.\n  if (Template.body.view)\n    return;\n\n  var view = Blaze.render(Template.body, document.body);\n  Template.body.view = view;\n};\n\n// XXX COMPAT WITH 0.9.0\nUI.body = Template.body;\n\n// XXX COMPAT WITH 0.9.0\n// (<body> tags in packages built with 0.9.0)\nTemplate.__body__ = Template.body;\nTemplate.__body__.__contentParts = Template.body.contentViews;\nTemplate.__body__.__instantiate = Template.body.renderToDocument;\n","\nTemplate.__checkName(\"__dynamic\");\nTemplate[\"__dynamic\"] = new Template(\"Template.__dynamic\", (function() {\n  var view = this;\n  return [ Blaze.View(\"lookup:checkContext\", function() {\n    return Spacebars.mustache(view.lookup(\"checkContext\"));\n  }), \"\\n  \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"dataContextPresent\"));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"__dynamicWithDataContext\"), function() {\n      return Blaze._InOuterTemplateScope(view, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateContentBlock);\n        });\n      });\n    }), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \\n    \", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(view.lookup(\"template\")),\n        data: Spacebars.call(view.lookup(\"..\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"__dynamicWithDataContext\"), function() {\n        return Blaze._InOuterTemplateScope(view, function() {\n          return Spacebars.include(function() {\n            return Spacebars.call(view.templateContentBlock);\n          });\n        });\n      });\n    }), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"__dynamicWithDataContext\");\nTemplate[\"__dynamicWithDataContext\"] = new Template(\"Template.__dynamicWithDataContext\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.dataMustache(view.lookup(\"chooseTemplate\"), view.lookup(\"template\"));\n  }, function() {\n    return [ \"\\n    \\n    \", Blaze._TemplateWith(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"data\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"..\"), function() {\n        return Blaze._InOuterTemplateScope(view, function() {\n          return Spacebars.include(function() {\n            return Spacebars.call(view.templateContentBlock);\n          });\n        });\n      });\n    }), \"\\n  \" ];\n  });\n}));\n","var Template = Blaze.Template;\n\n/**\n * @isTemplate true\n * @memberOf Template\n * @function dynamic\n * @summary Choose a template to include dynamically, by name.\n * @locus Templates\n * @param {String} template The name of the template to include.\n * @param {Object} [data] Optional. The data context in which to include the\n * template.\n */\n\nTemplate.__dynamicWithDataContext.helpers({\n  chooseTemplate: function (name) {\n    return Blaze._getTemplate(name, function () {\n      return Template.instance();\n    });\n  }\n});\n\nTemplate.__dynamic.helpers({\n  dataContextPresent: function () {\n    return _.has(this, \"data\");\n  },\n  checkContext: function () {\n    if (! _.has(this, \"template\")) {\n      throw new Error(\"Must specify name in the 'template' argument \" +\n                      \"to {{> Template.dynamic}}.\");\n    }\n\n    _.each(this, function (v, k) {\n      if (k !== \"template\" && k !== \"data\") {\n        throw new Error(\"Invalid argument to {{> Template.dynamic}}: \" +\n                        k);\n      }\n    });\n  }\n});\n"]}}]
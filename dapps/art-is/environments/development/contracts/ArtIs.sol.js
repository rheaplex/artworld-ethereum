// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"definition","type":"uint8"}],"name":"initialValue","outputs":[{"name":"value","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[{"name":"index","type":"uint8"},{"name":"extent","type":"uint8"},{"name":"connection","type":"uint8"},{"name":"relation","type":"uint8"},{"name":"subject","type":"uint8"}],"name":"setDefinition","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"index","type":"uint8"}],"name":"indexPrice","outputs":[{"name":"price","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"definitions","outputs":[{"name":"extent","type":"uint8"},{"name":"connection","type":"uint8"},{"name":"relation","type":"uint8"},{"name":"subject","type":"uint8"},{"name":"setter","type":"address"}],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"number","type":"uint8"},{"indexed":false,"name":"extent","type":"uint8"},{"indexed":false,"name":"connection","type":"uint8"},{"indexed":false,"name":"relation","type":"uint8"},{"indexed":false,"name":"subject","type":"uint8"},{"indexed":false,"name":"setter","type":"address"}],"name":"DefinitionChanged","type":"event"}],
    binary: "606060405260005b600860ff8216101561005b5761006a8160a06040519081016040528060008152602001600081526020016000815260200160008152602001600081526020015060a0604051908101604052806100f1845b90565b506103978061012b6000396000f35b600060ff8316600881101561000257905081518154602084015160408501516060860151608096909601516401000000000263010000009690960262010000919091026101009290920260ff199390931690931761ff0019169190911762ff000019161763ff000000191617602060020a60c060020a031916919091179055600101610007565b81526020016100ff84610058565b815260200161010d84610058565b815260200161011b84610058565b815232602091909101529291505056606060405260e060020a600035046346523b69811461003c5780634e70554914610054578063e392a5211461007f578063fd51fc4c1461012d575b005b6040805160ff60043516815290519081900360200190f35b61003a6004356024356044356064356084356000600860ff87161080156101ca57506101c786610086565b6101776004355b6000610100604051908101604052806008905b60008152602001906001900390816100995750506001815264e8d4a51000602082015266038d7ea4c680006040820152670de0b6b3a76400006060820152678ac7230489e80000608082015268056bc75e2d6310000060a0820152683635c9adc5dea0000060c082015269021e19e0c9bab240000060e08201528060ff841660088110156100025760200201519392505050565b61018960043560008160088110156100025790505460ff818116925061010082048116916201000081048216916301000000820416906401000000009004600160a060020a031685565b60408051918252519081900360200190f35b6040805160ff968716815294861660208601529285168484015293166060830152600160a060020a0392909216608082015290519081900360a00190f35b34145b80156101d95750602060ff8616105b80156101e85750602060ff8516105b80156101f75750602060ff8416105b80156102065750602060ff8316105b1561037357600060ff8716600881101561000257546401000000009004600160a060020a03169150859060ff8816600881101561000257805460ff1916909217909155849060ff88166008811015610002579050805461ff0019166101009290920291909117905582600060ff8816600881101561000257805462ff00001916620100009390930292909217909155829060ff8816600881101561000257805463ff000000191663010000009390930292909217909155329060ff8816600881101561000257805477ffffffffffffffffffffffffffffffffffffffff0000000019166401000000009390930292909217909155600160a060020a0382169061037b88610086565b6040805160ff888116825287811660208301528681168284015285811660608301528416608082015232600160a060020a031660a082015290517fc9d34124c372f23861c5aa70eab2353e3d966a10c866b730a220846988f167d29181900360c00190a15b505050505050565b6040516000818181858888f19350505050151561030e5761000256",
    unlinked_binary: "606060405260005b600860ff8216101561005b5761006a8160a06040519081016040528060008152602001600081526020016000815260200160008152602001600081526020015060a0604051908101604052806100f1845b90565b506103978061012b6000396000f35b600060ff8316600881101561000257905081518154602084015160408501516060860151608096909601516401000000000263010000009690960262010000919091026101009290920260ff199390931690931761ff0019169190911762ff000019161763ff000000191617602060020a60c060020a031916919091179055600101610007565b81526020016100ff84610058565b815260200161010d84610058565b815260200161011b84610058565b815232602091909101529291505056606060405260e060020a600035046346523b69811461003c5780634e70554914610054578063e392a5211461007f578063fd51fc4c1461012d575b005b6040805160ff60043516815290519081900360200190f35b61003a6004356024356044356064356084356000600860ff87161080156101ca57506101c786610086565b6101776004355b6000610100604051908101604052806008905b60008152602001906001900390816100995750506001815264e8d4a51000602082015266038d7ea4c680006040820152670de0b6b3a76400006060820152678ac7230489e80000608082015268056bc75e2d6310000060a0820152683635c9adc5dea0000060c082015269021e19e0c9bab240000060e08201528060ff841660088110156100025760200201519392505050565b61018960043560008160088110156100025790505460ff818116925061010082048116916201000081048216916301000000820416906401000000009004600160a060020a031685565b60408051918252519081900360200190f35b6040805160ff968716815294861660208601529285168484015293166060830152600160a060020a0392909216608082015290519081900360a00190f35b34145b80156101d95750602060ff8616105b80156101e85750602060ff8516105b80156101f75750602060ff8416105b80156102065750602060ff8316105b1561037357600060ff8716600881101561000257546401000000009004600160a060020a03169150859060ff8816600881101561000257805460ff1916909217909155849060ff88166008811015610002579050805461ff0019166101009290920291909117905582600060ff8816600881101561000257805462ff00001916620100009390930292909217909155829060ff8816600881101561000257805463ff000000191663010000009390930292909217909155329060ff8816600881101561000257805477ffffffffffffffffffffffffffffffffffffffff0000000019166401000000009390930292909217909155600160a060020a0382169061037b88610086565b6040805160ff888116825287811660208301528681168284015285811660608301528416608082015232600160a060020a031660a082015290517fc9d34124c372f23861c5aa70eab2353e3d966a10c866b730a220846988f167d29181900360c00190a15b505050505050565b6040516000818181858888f19350505050151561030e5761000256",
    address: "0xe6887d4e587db4b2d475f9deb44f63918e61f398",
    generated_with: "2.0.9",
    contract_name: "ArtIs"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("ArtIs error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("ArtIs error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("ArtIs error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("ArtIs error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.ArtIs = Contract;
  }

})();

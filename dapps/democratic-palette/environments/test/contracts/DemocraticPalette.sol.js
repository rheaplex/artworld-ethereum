// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"palette","outputs":[{"name":"red","type":"uint8"},{"name":"green","type":"uint8"},{"name":"blue","type":"uint8"},{"name":"votes","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"red","type":"uint8"},{"name":"green","type":"uint8"},{"name":"blue","type":"uint8"}],"name":"voteFor","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"index","type":"uint256"}],"name":"PaletteChanged","type":"event"}],
    binary: "606060405261032b806100126000396000f3606060405260e060020a60003504639cb71ef88114610026578063d32ab21d14610061575b005b610161600435600181600c811015610002575060029182029081015491015460ff828116926101008104821692620100009091049091169084565b610024600435602435604435600060ff808316618aed0281851661010002918616919091010162ffffff81168252602082905260409091208054600101908190556101779085908590859060006000600060006000601960005054861115610320575b600c84101561019c5761017d600185600c8110156100025760020201825060408051608081018252825460ff81811683526101008204811660208401526201000090910416918101919091526001919091015460608201528a8a8a60008360ff16856000015160ff1614801561014357508260ff16856020015160ff16145b801561015857508160ff16856040015160ff16145b95945050505050565b6060938452608092835260a09190915260c05290f35b50505050565b156102915785600185600c811015610002576002908102019190915594505b841515610241575b600c83101561024157601954600184600c8110156100025760020201825060010154141561029d57604080516080810182528a8152602081018a905290810188905260608101879052600184600c81101561000257600202018250815181546020840151604085015162010000026101009190910260ff199290921690921761ff0019161762ff0000191617815560609190910151600191909101555b505060025460015b600c8110156102a957601954600182600c811015610002576002020160005060010154141561028957600181600c81101561000257600290810201549250505b600101610249565b600193909301926100c4565b600192909201916101a4565b601982905584156102ec576040805185815290517fdcbfb96c25cc4a622eb6003b4618e02a632a9c74b64b10f02fd73d96be1efd7d9181900360200190a1610320565b6040805184815290517fdcbfb96c25cc4a622eb6003b4618e02a632a9c74b64b10f02fd73d96be1efd7d9181900360200190a15b50505050505050505056",
    unlinked_binary: "606060405261032b806100126000396000f3606060405260e060020a60003504639cb71ef88114610026578063d32ab21d14610061575b005b610161600435600181600c811015610002575060029182029081015491015460ff828116926101008104821692620100009091049091169084565b610024600435602435604435600060ff808316618aed0281851661010002918616919091010162ffffff81168252602082905260409091208054600101908190556101779085908590859060006000600060006000601960005054861115610320575b600c84101561019c5761017d600185600c8110156100025760020201825060408051608081018252825460ff81811683526101008204811660208401526201000090910416918101919091526001919091015460608201528a8a8a60008360ff16856000015160ff1614801561014357508260ff16856020015160ff16145b801561015857508160ff16856040015160ff16145b95945050505050565b6060938452608092835260a09190915260c05290f35b50505050565b156102915785600185600c811015610002576002908102019190915594505b841515610241575b600c83101561024157601954600184600c8110156100025760020201825060010154141561029d57604080516080810182528a8152602081018a905290810188905260608101879052600184600c81101561000257600202018250815181546020840151604085015162010000026101009190910260ff199290921690921761ff0019161762ff0000191617815560609190910151600191909101555b505060025460015b600c8110156102a957601954600182600c811015610002576002020160005060010154141561028957600181600c81101561000257600290810201549250505b600101610249565b600193909301926100c4565b600192909201916101a4565b601982905584156102ec576040805185815290517fdcbfb96c25cc4a622eb6003b4618e02a632a9c74b64b10f02fd73d96be1efd7d9181900360200190a1610320565b6040805184815290517fdcbfb96c25cc4a622eb6003b4618e02a632a9c74b64b10f02fd73d96be1efd7d9181900360200190a15b50505050505050505056",
    address: "0x5e9ed82683f54a4233f5154946dff29415c8cddf",
    generated_with: "2.0.9",
    contract_name: "DemocraticPalette"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("DemocraticPalette error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("DemocraticPalette error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("DemocraticPalette error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("DemocraticPalette error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.DemocraticPalette = Contract;
  }

})();
